8a9,20
> 
>     home-manager.url = "github:nix-community/home-manager";
>     home-manager.inputs.nixpkgs.follows = "nixpkgs";
> 
>     nixvim.url = "github:nix-community/nixvim";
>     nixvim.inputs.nixpkgs.follows = "nixpkgs";
> 
>     nur.url = "github:nix-community/NUR";
>     nur.inputs.nixpkgs.follows = "nixpkgs";
> 
>     stylix.url = "github:danth/stylix";
>     stylix.inputs.nixpkgs.follows = "nixpkgs";
14a27
>       home-manager,
32a46,77
> 
>       devShells = forAllSystems (
>         system:
>         let
>           pkgs = nixpkgs.legacyPackages.${system};
>         in
>         {
>           default = import ./shell.nix { inherit pkgs; };
>         }
>       );
> 
>       nixosConfigurations = {
>         HOSTNAME = nixpkgs.lib.nixosSystem {
>           specialArgs = {
>             inherit inputs outputs;
>           };
>           modules = [ ./hosts/HOSTNAME ];
>         };
>       };
> 
>       homeConfigurations = {
>         "USERNAME@HOSTNAME" = home-manager.lib.homeManagerConfiguration {
>           pkgs = nixpkgs.legacyPackages.x86_64-linux; # FIXME: Set architecture
>           extraSpecialArgs = {
>             inherit inputs outputs;
>           };
>           modules = [
>             ./users/USERNAME/home
>             ./users/USERNAME/home/hosts/HOSTNAME
>           ];
>         };
>       };
